#!/usr/bin/env bash

PACKAGE_NAME="${1:?Python package name required}"
PYTHON_VERSION="${2:-3.12}"

# Licence is usually MIT or Proprietary
LICENCE="${3:-MIT}"

DJANGO_APP="${4:-pages}"
DJANGO_PROJECT="${5:-django_website}"
PROJECT_DESCRIPTION="${6:-Django website project}"

# Poetry must be installed. 
poetry --version || {
    echo Poetry not installed
    exit 1
}

# Do not run if a Poetry project file exists
[ -f pyproject.toml ] && {
    echo Poetry project file exists.
    exit 1
}

# Do not run if git has been initialized
[ -d .git ] && {
    echo Git folder exists.
    exit 0
}

function mk_readme {
echo Create README file
local CODE='```'
cat > README.md << EOF
# Django project
## Setup 
After cloning from GitHUb run
${CODE}
poetry install
${CODE}
## Development server
${CODE}
poetry run python3 manage.py runserver
${CODE}
EOF
}


function mk_gitignore {
echo Create .gitignore file
cat > .gitignore <<EOF
# Django #
*.log
*.pot
*.pyc
__pycache__
db.sqlite3

.~
.*.swp
.DS_Store


# Jetbrains
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml


# Distribution / packaging
dist/

# Environments
.env
.venv
EOF
}

function edit_django_settings {
    (
	echo edit_django_settings &&
    	cd ${DJANGO_PROJECT} &&
        sed -i .sav "/django.contrib.staticfiles/ s/$/\n    \"${DJANGO_APP}\",/" settings.py &&
        rm -f settings.py.sav
    )
}

function run {
echo "$@"
"$@"
}

run poetry init --name="${PACKAGE_NAME}" --description="${PROJECT_DESCRIPTION}" \
		--python="^${PYTHON_VERSION}" --license="${LICENCE}" --quiet  &&
run poetry config virtualenvs.in-project true --local &&
run poetry env use "${PYTHON_VERSION}" &&
run poetry add django &&
run poetry add django-types django-stubs-ext &&
run poetry add --group test pytest pytest-cov &&
run poetry add --group dev pytest pytest-cov bandit black &&
run poetry add --group dev-extra flake8 mypy pylint &&
run poetry run django-admin startproject "${DJANGO_PROJECT}" . &&
run poetry run python3 manage.py startapp "${DJANGO_APP}"  &&
edit_django_settings &&
mk_gitignore &&
mk_readme &&
run git init &&
run git add . &&
run git commit -m "Initial commit" 
